# Needed to enable Travis CI for gh-pages branches, see:
#   https://github.com/travis-ci/travis-core/pull/137
branches:
  only:
    - gh-pages

env:
  global:
    - PYENV_PY36_VERSION=3.6.8
    - PYENV_PY37_VERSION=3.7.2

script:
  # Linux Precise and Trusty cannot install Python 3.7 due to an outdated OpenSSL,
  # so we set this variable to allow skipping Python 3.7 on these shards.
  - python37_present="$(if which python3.7 >/dev/null; then echo 'true'; else echo 'false'; fi)"
  - ./build-support/ci.py --pants-version unspecified --python-version unspecified
  # TODO: these entries will not work until 1.15.0 is cut, as ./pants uses 1.14.0 currently
  # when pants_version is unspecified. Add this test back once 1.15.0 is released.
  # - ./build-support/ci.py --pants-version unspecified --python-version 2.7
  # - ./build-support/ci.py --pants-version unspecified --python-version 3.6
  # - if [[ "${python37_present}" = 'true' ]]; then
  #    ./build-support/ci.py --pants-version unspecified --python-version 3.7; fi
  - ./build-support/ci.py --pants-version config --python-version unspecified
  - ./build-support/ci.py --pants-version config --python-version 2.7
  - ./build-support/ci.py --pants-version config --python-version 3.6
  - if [[ "${python37_present}" = 'true' ]]; then
      ./build-support/ci.py --pants-version config --python-version 3.7; fi

osx_setup: &osx_setup
  os: osx
  language: generic
  addons:
    brew:
      packages:
        - openssl
  env:
    - &env_pyenv >
      PYENV_ROOT="${HOME}/.pants_pyenv"
      PYENV_BIN="${PYENV_ROOT}/bin/pyenv"
      PATH="${PYENV_ROOT}/shims:${PATH}"
    - >
      # These flags are necessary to get OpenSSL working. See
      # https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib.
      PATH="/usr/local/opt/openssl/bin:$PATH"
      LDFLAGS="-L/usr/local/opt/openssl/lib"
      CPPFLAGS="-I/usr/local/opt/openssl/include"
  before_install:
    - &pyenv_install_py36 >
      if [ ! -d "${PYENV_ROOT}" ]; then git clone https://github.com/pyenv/pyenv ${PYENV_ROOT}; fi
      && "${PYENV_BIN}" install "${PYENV_PY36_VERSION}"
    - &pyenv_install_py37 >
      if [ ! -d "${PYENV_ROOT}" ]; then git clone https://github.com/pyenv/pyenv ${PYENV_ROOT}; fi
      && "${PYENV_BIN}" install "${PYENV_PY37_VERSION}"
    - ${PYENV_BIN} global "${PYENV_PY36_VERSION}" "${PYENV_PY37_VERSION}"
  before_script:
    # Override file handler and thread limits
    - ulimit -c unlimited
    - ulimit -n 8192

linux_setup: &linux_setup
  os: linux
  sudo: false
  language: python
  python:
    - "2.7"
    - "3.6"
    - "3.7"

matrix:
  include:
    - name: "OSX 10.11 - El Capitan"
      <<: *osx_setup
      osx_image: xcode8.0

    - name: "OSX 10.12 - Sierra"
      <<: *osx_setup
      osx_image: xcode9.2
      # OSX 10.12 Sierra frequently flakes when running with Pantsd. Restore the original
      # tests once https://github.com/pantsbuild/pants/issues/6714 and
      # https://github.com/pantsbuild/pants/issues/7323 are resolved.
      script:
        - ./build-support/ci.py --pants-version unspecified --python-version unspecified --skip-pantsd-tests
        # TODO: add these once 1.15.0 is released.
        # - ./build-support/ci.py --pants-version unspecified --python-version 2.7 --skip-pantsd-tests
        # - ./build-support/ci.py --pants-version unspecified --python-version 3.6 --skip-pantsd-tests
        # - ./build-support/ci.py --pants-version unspecified --python-version 3.7 --skip-pantsd-tests
        - ./build-support/ci.py --pants-version config --python-version unspecified --skip-pantsd-tests
        - ./build-support/ci.py --pants-version config --python-version 2.7 --skip-pantsd-tests
        - ./build-support/ci.py --pants-version config --python-version 3.6 --skip-pantsd-tests
        - ./build-support/ci.py --pants-version config --python-version 3.7 --skip-pantsd-tests

    - name: "OSX 10.13 - High Sierra"
      <<: *osx_setup
      osx_image: xcode9.4

    - name: "Ubuntu 12.04 - Precise"
      <<: *linux_setup
      dist: precise
      sudo: required
      env:
        - *env_pyenv
      before_install:
        - *pyenv_install_py36
        - ${PYENV_BIN} global "${PYENV_PY36_VERSION}"

    - name: "Ubuntu 14.04 - Trusty"
      <<: *linux_setup
      dist: trusty
      before_install:
        - pyenv global 2.7.14 3.6.3

    - name: "Ubuntu 16.04 - Xenial"
      <<: *linux_setup
      dist: xenial
      before_install:
      - pyenv global 2.7.15 3.6.7 3.7.1
